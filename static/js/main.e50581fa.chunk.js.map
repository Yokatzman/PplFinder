{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/useFavoritesFetch.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","api","axios","create","baseURL","users","isLoading","favorites","firstMap","isFavorite","uuid","forEach","element","login","useState","favoritesMap","setFavoritesMap","useEffect","Object","values","hoveredUserId","setHoveredUserId","Brazil","Australia","Canada","Germany","France","numChecked","countriesChecked","setCountriesChecked","handleMouseLeave","handleCheckBox","country","newChecked","assign","map","user","index","location","key","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","onClick","userData","newMap","get","then","res","filtered","data","filter","length","delId","id","delete","post","addOrDelFavorite","useFavoritesFetch","setFavorites","setIsLoading","fetchFavorites","a","response","console","log","Home","Content","Header","setUsers","fetchUsers","results","usePeopleFetch","firstmap","isLoading2","favorite","found","FavoritesList","favoritesList","setFavoritesList","newList","slice","_index","fav","splice","DeleteFavorite","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","history","useHistory","setValue","AppBar","position","style","top","Tabs","_e","newValue","push","aria-label","indicatorColor","textColor","Tab","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e50581fa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport axios from 'axios'\r\n//for online json server\r\nconst api = axios.create({\r\n  baseURL: \"https://ppldb.herokuapp.com/results\"\r\n})\r\nconst UserList = ({ users, isLoading, favorites, firstMap }) => {\r\n\r\n\r\n  const isFavorite = (uuid) => {\r\n    let bool = false;\r\n\r\n    favorites.forEach(element => {\r\n      if (element.login.uuid == uuid) {\r\n        bool = true;\r\n      }\r\n    });\r\n  };\r\n  const [favoritesMap, setFavoritesMap] = useState(firstMap);\r\n  useEffect(() => { setFavoritesMap(firstMap) }, [firstMap]);\r\n\r\n  for (const value1 of Object.values(users)) {\r\n\r\n    let currUuid = value1.login.uuid;\r\n\r\n\r\n    isFavorite(currUuid);\r\n  }\r\n\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  const [countriesChecked, setCountriesChecked] = useState({\r\n    Brazil: false,\r\n    Australia: false,\r\n    Canada: false,\r\n    Germany: false,\r\n    France: false,\r\n    numChecked: 0\r\n  });\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n  const addOrDelFavorite = (userData) => {\r\n    var newMap = Object.assign({}, favoritesMap);\r\n    if (favoritesMap[userData.login.uuid] == true) {\r\n      newMap[userData.login.uuid] = false\r\n      setFavoritesMap(newMap);\r\n      api.get('/').then(res => {\r\n        let filtered = Object.values(res.data).filter(user => user.login.uuid == userData.login.uuid);\r\n        if (filtered.length > 0) {\r\n          var delId = '' + filtered[0].id\r\n          api.delete(delId);\r\n        }\r\n      })\r\n\r\n    } else {\r\n      newMap[userData.login.uuid] = true;\r\n      setFavoritesMap(newMap);\r\n      delete userData['id'];\r\n      api.get('/').then(res => {\r\n        let filtered = Object.values(res.data).filter(user => user.login.uuid == userData.login.uuid);\r\n        if (filtered.length == 0) {\r\n          api.post('/', userData);\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n  const handleCheckBox = (country) => {\r\n    let label = \"\"\r\n    switch (country) {\r\n      case \"BR\":\r\n        label = \"Brazil\"\r\n        break;\r\n      case \"AU\":\r\n        label = \"Australia\"\r\n        break;\r\n      case \"CA\":\r\n        label = \"Canada\"\r\n        break;\r\n      case \"DE\":\r\n        label = \"Germany\"\r\n        break;\r\n      case \"FR\":\r\n        label = \"France\"\r\n        break;\r\n    }\r\n\r\n\r\n    let newChecked = Object.assign({}, countriesChecked);\r\n    newChecked[label] = !countriesChecked[label];\r\n\r\n    if (countriesChecked[label] == true) {\r\n      newChecked['numChecked'] = countriesChecked['numChecked'] - 1;\r\n    } else {\r\n      newChecked['numChecked'] = countriesChecked['numChecked'] + 1\r\n    }\r\n    setCountriesChecked(newChecked);\r\n  }\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox onChange={handleCheckBox} value=\"BR\" label=\"Brazil\" />\r\n        <CheckBox onChange={handleCheckBox} value=\"AU\" label=\"Australia\" />\r\n        <CheckBox onChange={handleCheckBox} value=\"CA\" label=\"Canada\" />\r\n        <CheckBox onChange={handleCheckBox} value=\"DE\" label=\"Germany\" />\r\n        <CheckBox onChange={handleCheckBox} value=\"FR\" label=\"France\" />\r\n      </S.Filters>\r\n      <S.List>\r\n        {users.map((user, index) => {\r\n          if (countriesChecked[user.location.country] == true || countriesChecked['numChecked'] == 0) {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={index === hoveredUserId || favoritesMap[user.login.uuid] == true}>\r\n                  <IconButton >\r\n                    <FavoriteIcon onClick={() => {\r\n                      addOrDelFavorite(user);\r\n                    }} color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n          } else return null;\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport const useFavoritesFetch = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  async function fetchFavorites() {\r\n    setIsLoading(true);\r\n\r\n    const response = await axios.get(`https://ppldb.herokuapp.com/results`);\r\n\r\n\r\n    console.log(response);\r\n\r\n    setIsLoading(false);\r\n    setFavorites(response.data);\r\n  }\r\n\r\n  return { favorites, isLoading, fetchFavorites };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport { useFavoritesFetch } from \"hooks\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  const { favorites, isLoading2 } = useFavoritesFetch();\r\n  var firstmap = {}\r\n  favorites.forEach(favorite => {\r\n    var found = false;\r\n    users.forEach(user => {\r\n      if (user.login.uuid == favorite.login.uuid) {\r\n        firstmap[user.login.uuid] = true;\r\n      }\r\n      user['favorite'] = found;\r\n      found = false\r\n    })\r\n  })\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} favorites={favorites} firstMap={firstmap} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    //get the same users each time-\r\n    //const response = await axios.get(`https://randomuser.me/api/?results=25&seed=powerlink&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport axios from 'axios'\r\nconst api = axios.create({\r\n  baseURL: \"https://ppldb.herokuapp.com/results\"\r\n})\r\nconst FavoritesList = ({ users, isLoading }) => {\r\n\r\n\r\n  const [favoritesList, setFavoritesList] = useState(users);\r\n  useEffect(() => { setFavoritesList(users) }, [users]);\r\n\r\n\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n  const DeleteFavorite = (userData) => {\r\n    var newList = favoritesList.slice();\r\n\r\n\r\n    api.get('/').then(res => {\r\n      let filtered = Object.values(res.data).filter(user => user.login.uuid == userData.login.uuid);\r\n      if (filtered.length > 0) {\r\n        var delId = '' + filtered[0].id\r\n        var _index = 0;\r\n        favoritesList.forEach((fav, index) => {\r\n          if (fav.login.uuid == userData.login.uuid) {\r\n            _index = index;\r\n          }\r\n        })\r\n        newList.splice(_index, 1);\r\n        setFavoritesList(newList);\r\n        api.delete(delId);\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n  return (\r\n    <S.UserList>\r\n      <S.List>\r\n        {favoritesList.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={true}>\r\n                <IconButton >\r\n                  <FavoriteIcon onClick={() => {\r\n                    DeleteFavorite(user);\r\n                  }} color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\n//import UserList from \"components/UserList\";\r\nimport FavoritesList from \"components/FavoritesList\";\r\n\r\nimport { useFavoritesFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n  const { favorites, isLoading } = useFavoritesFetch();\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder - Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <FavoritesList users={favorites} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n    if (newValue==1){\r\n      history.push(\"/favorites\");\r\n\r\n    }else history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} />\r\n        <Tab label=\"Favorites\" index={1} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport { Favorites } from \"pages\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}